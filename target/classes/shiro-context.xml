<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!-- 扫描的包 -->
    <context:component-scan base-package="com.web.shrio"/>
    <context:component-scan base-package="com.web.service"/>
    <context:component-scan base-package="com.web.dao"/>

    <!-- 配置 Bean 后置处理器: 会自动的调用和 Spring 整合后各个组件的生命周期方法. -->
    <!--<bean id="lifecycleBeanPostProcessor"
          class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>-->

    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
        <property name="loginUrl" value="tologin"/><!--登录页面，-->
        <property name="successUrl" value="/main/index"/><!--登录成功页面，如果自己设置了返回页面，则不跳转-->
        <property name="unauthorizedUrl" value="unfound"/><!-- 没有权限跳转的地址 -->
        <property name="filterChainDefinitions">
            <value>
                /tologin=anon <!--表示都可以访问-->
                <!--静态路径允许访问-->
                /static/**=anon
                /user/tologin = anon
               /main/** = authc
                /view/** = authc
                /register = anon
                /error=authc
                /login=anon
                /role/pageList=anon
                /getVerifyCode = anon

               <!-- /menu/list=perms[admin:/menu/list] &lt;!&ndash;perms表示需要该权限才能访问的页面&ndash;&gt;
                /user/list=perms[admin:/user/list]
                /role/list=perms[admin:/role/list]
                /view/system/**=roles["admin"] --><!-- roles["admin,user"] 只有拥有admin角色的用户才可访问，同时需要拥有多个角色的话，用引号引起来，中间用逗号隔开-->
                /**=authc <!--authc表示需要认证才能访问的页面-->
            </value>
        </property>
        <!-- 自定义filter配置 -->
       <!-- <property name="filters">
            <map>
                &lt;!&ndash; 将自定义 的FormAuthenticationFilter注入shiroFilter中&ndash;&gt;
                <entry key="authc" value-ref="formAuthenticationFilter" />
            </map>
        </property>-->
    </bean>

    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="MyRealm"/>
    </bean>

    <!-- 自定义Realm -->
    <bean id="MyRealm" class="com.web.shrio.MyRealm">
        <!-- 定义凭证匹配器 -->
      <!--  <property name="credentialsMatcher" ref="credentialsMatcher"></property>-->
    </bean>
    <!-- 自定义form认证过虑器 -->
    <!-- 基于Form表单的身份验证过滤器，不配置将也会注册此过虑器，表单中的用户账号、密码及loginurl将采用默认值，建议配置 -->
    <!--<bean id="formAuthenticationFilter"
          class="com.web.utils.CustomFormAuthenticationFilter  ">
        &lt;!&ndash; 表单中账号的input名称 &ndash;&gt;
        <property name="usernameParam" value="username" />
        &lt;!&ndash; 表单中密码的input名称 &ndash;&gt;
        <property name="passwordParam" value="password" />
    </bean>-->
   <!-- &lt;!&ndash; 凭证匹配器 org.apache.shiro.authc.credential.HashedCredentialsMatcher&ndash;&gt;
    <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
        &lt;!&ndash; 加密算法名称 &ndash;&gt;
        <property name="hashAlgorithmName" value="MD5"></property>
        &lt;!&ndash; 散列次数 &ndash;&gt;
        &lt;!&ndash;<property name="hashIterations" value="2"></property>&ndash;&gt;
    </bean>-->
</beans>